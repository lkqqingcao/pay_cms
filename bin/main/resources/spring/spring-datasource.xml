<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 	xmlns:context="http://www.springframework.org/schema/context" 	xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xmlns:p="http://www.springframework.org/schema/p"     xmlns:tx="http://www.springframework.org/schema/tx"
	 xsi:schemaLocation="
	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	  http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	  http://www.springframework.org/schema/context
	  http://www.springframework.org/schema/context/spring-context-3.2.xsd">
 
    <bean id="sqlSessionFactoryBaseSocial"    class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mobogenie.social"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBaseSocial"/>
    </bean>
    
     <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
          <property name="slowSqlMillis" value="5000" />
          <property name="logSlowSql" value="true" />
          <property name="mergeSql" value="true" />
    </bean> 
	
	
 	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		    <property name="url" value="${db.url}" />
		    <property name="username" value="${db.username}" />
		    <property name="password" value="${db.password}" />
		    <property name="filters"  value="config"/>
		    <property name="proxyFilters">
                <list>
                     <ref bean="stat-filter" />
                </list>
            </property>
		    <property name="initialSize" value="1" />
		    <property name="maxActive" value="${db.maxPoolSize}" />
		    <property name="maxWait" value="${db.borrowConnectionTimeout}" />
		    <property name="minIdle" value="${db.minPoolSize}" />
		    <property name="timeBetweenEvictionRunsMillis" value="60000" />
		    <property name="minEvictableIdleTimeMillis" value="300000" />
		    <property name="validationQuery" value="SELECT 'x'" />
		    <property name="testWhileIdle" value="true" />
		    <property name="testOnBorrow" value="false" />
		    <property name="testOnReturn" value="false" />
		    <property name="connectionProperties" value="config.decrypt=true" />
   </bean>  
	
<!-- 	<bean id="dataSource"  class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="dataSourceCms"></property>
		<property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">${db.username}</prop>
				<prop key="password">${db.password}</prop>
				<prop key="URL">${db.url}</prop>
			</props>
		</property>
		<property name="minPoolSize" value="${db.minPoolSize}"/>
		<property name="maxPoolSize" value="${db.maxPoolSize}"/>
		<property name="maxIdleTime" value="${db.maxIdleTime}"/>
		<property name="loginTimeout" value="${db.loginTimeout}"/>
		<property name="borrowConnectionTimeout" value="${db.borrowConnectionTimeout}"/>
        <property name="testQuery" value="select 1 from dual" />
	</bean> -->

	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
 </beans>